---
name: Build html & Publish to github pages

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - '**'         # Push events on all branchs
    tags:        
      - v*           # Push events with tags starting with v

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node requirements
        run: npm ci
      - name: 🚨 Check lint
        run: npm run lint
      - name: ⬆ Bump version files
        if: startsWith(github.event.ref, 'refs/tags')
        run: |
          export APP_VERSION=$(git describe --tags --always)
          sed -i -E "s/version = (.*)/version = ${APP_VERSION:1}/"  setup.cfg
          sed -i -E "s/version\": \"(.*)\"/version\": \"${APP_VERSION:1}\"/"  package.json;
      - name: 🏗 Build html
        run: NODE_ENV=production npm run export
      - name: 🚀 Deploy to GitHub pages
        if: startsWith(github.event.ref, 'refs/tags') || steps.extract_branch.outputs.branch == 'master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_branch: gh-pages
          publish_dir: ./__sapper__/export/muse
      - name: 🐍 Build Python package
        run: |
          cp  -r ./__sapper__/export/muse/* mopidy_muse/static
          python3 -m pip install  --upgrade setuptools wheel
          python3 setup.py sdist bdist_wheel

          #- name: Publish package 📦 to Test PyPI
          #  uses: pypa/gh-action-pypi-publish@master
          #  if: startsWith(github.event.ref, 'refs/tags')
          #  with:
          #    user: __token__
          #    password: ${{ secrets.test_pypi_password }}
          #    repository_url: https://test.pypi.org/legacy/
      - name: Publish package 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: startsWith(github.event.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          repository_url: https://upload.pypi.org/legacy/
      - name: 🔖Publish Release
        if: startsWith(github.event.ref, 'refs/tags')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - run: cp dist/Mopidy-Muse*.tar.gz ./dist/Mopidy-Muse.tar.gz
        if: startsWith(github.event.ref, 'refs/tags')
      - name: 🍱 Upload Release Asset
        if: startsWith(github.event.ref, 'refs/tags')
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Mopidy-Muse.tar.gz
          asset_name: Mopidy-Muse.tar.gz
          asset_content_type: application/gzip
      - name: ⬆ Upgrade package version files
        if: startsWith(github.event.ref, 'refs/tags')
        run: |
          git config --global user.name 'Github Bot'
          git config --global user.email 'bot@github.com'
          git add package.json setup.cfg
          git commit -m "⬆ Upgrade package version files"
          git push origin HEAD:master
